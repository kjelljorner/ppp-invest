import pandas as pd
import itertools
from pathlib import Path
import tarfile


def get_samples(name):
    with tarfile.open(Path(f"data/xyz/{name}/xyz.tar.gz")) as f:
        filenames = f.getnames()
    # samples = [Path(sample) for sample in filenames]
    # samples = [Path(f"results/{name}") / p.with_suffix(".csv").name for p in samples]
    samples = [filename.split(".")[0] for filename in filenames]

    return samples


NAMES = ["azaphenalenes", "azulenes", "rational_design"]
SAMPLES = {name: get_samples(name) for name in NAMES}


rule all:
    input:
        expand(["results/{name}_combined.csv", "results/{name}.tar.gz"], name=NAMES),


rule combine_csvs:
    input:
        lambda wildcards: expand(
            "results/{name}/{sample}.csv",
            sample=SAMPLES[wildcards.name],
            name=wildcards.name,
        ),
    output:
        csv="results/{name}_combined.csv",
        tar="results/{name}.tar.gz",
    conda:
        "envs/coulson.yml"
    shell:
        "csvstack {input} > {output.csv} && tar -cf {output.tar} {input}"


rule extract_xyz:
    input:
        "data/xyz/{name}/xyz.tar.gz",
    output:
        temp("resources/xyz/{name}/{sample}.xyz"),
    shell:
        "tar -xf {input} -C resources/xyz/{wildcards.name}/ {wildcards.sample}.xyz"


rule calculate_compound:
    input:
        "resources/xyz/{name}/{sample}.xyz",
    output:
        temp("results/{name}/{sample}.csv"),
    conda:
        "envs/coulson.yml"
    script:
        "scripts/calculate.py"
